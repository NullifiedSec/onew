# onew

Append lines from stdin to a file, but only if they don't already appear in the file. `onew` also outputs the new lines to `stdout`, making it a bit like a `tee -a` command that removes duplicates.

-----

## Usage Example

Here, a file called `things.txt` contains a list of numbers. `newthings.txt` contains a second list of numbers, some of which appear in `things.txt` and some of which do not. `onew` is used to append the latter to `things.txt`.

```
▶ cat things.txt
Zero
One
Two

▶ cat newthings.txt
One
Two
Three
Four

▶ cat newthings.txt | onew things.txt
Three
Four

▶ cat things.txt
Zero
One
Two
Three
Four
```

The new lines added to `things.txt` are also sent to `stdout`. This allows you to redirect them to another file:

```
▶ cat newthings.txt | onew things.txt > added-lines.txt
▶ cat added-lines.txt
Three
Four
```

-----

## Flags

The base `onew` tool is useful for ensuring unique lines, but for more nuanced handling, it includes several flags to improve flexibility and usability in various scenarios.

  - **`-d` (Dry-run):** View the output in `stdout`, but don't append to the file.
  - **`-q` (Quiet):** Append to the file, but don't print anything to `stdout`.
  - **`-i` (Ignore Case):** Performs case-insensitive comparisons when checking for existing lines and duplicates from `stdin`. For example, `'Apple'` from stdin won't be added if `'apple'` already exists in `existing.txt`.
  - **`-B` (Ignore Blank Lines):** Skips processing (and potentially adding) blank lines received from `stdin`.
  - **`-o <outfile>` (Output File):** Specifies a different file to append the new unique lines to. If omitted, the default behavior remains the same (appends to the `[input_filename]` if provided).
  - **`-c` (Counts):** Prints statistics (lines read, duplicates found, blanks skipped, lines written) to `stderr` upon completion.
  - **`--backup[=<SUFFIX>]` (Backup):** Creates a backup copy of the `[input_filename]` *before* modification. This only takes effect if the output is being written back to the *same* file specified as `[input_filename]` (i.e., `-o` is not used or `-o` points to the same file).
      - If `--backup` is used without a value, the suffix `.bak` is used.
      - If `--backup=<SUFFIX>` is used, the specified `SUFFIX` is appended to the filename (e.g., `--backup=.orig`).

-----

## Install

Erm.... i will make it available for install later
